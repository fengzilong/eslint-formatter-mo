name: Release
on:
  push:
    branches:
      - master
jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 22.x]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache ~/.pnpm-store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.1
      - run: pnpm i
        env:
          COREPACK_ENABLE_DOWNLOAD_PROMPT: 0
      - run: pnpm lint

  release:
    needs: ['test']
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-release') && !contains(github.event.head_commit.message, 'skip-ci') && github.event_name != 'pull_request'"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - name: Cache ~/.pnpm-store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-release-
            ${{ runner.os }}-
      # https://vercel.com/guides/corepack-errors-github-actions
      - run: npm install -g corepack@latest
      - run: corepack enable
      - run: pnpm i
        env:
          COREPACK_ENABLE_DOWNLOAD_PROMPT: 0
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
